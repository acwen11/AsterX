# Schedule definitions for thorn AsterX

STORAGE: dens mom tau DEnt DYe dB Psi HydroBaseX::Bvec dBx_stag dBy_stag dBz_stag
STORAGE: volform w_lorentz
STORAGE: flux_x flux_y flux_z
# STORAGE: fluxHO_x fluxHO_y fluxHO_z
STORAGE: densrhs momrhs taurhs DEntrhs Avec_x_rhs Avec_y_rhs Avec_z_rhs Psi_rhs
STORAGE: ADMBaseX::metric ADMBaseX::lapse ADMBaseX::shift ADMBaseX::curv
STORAGE: Aux_in_RHSof_A_Psi
STORAGE: TmunuBaseX::eTtt TmunuBaseX::eTti TmunuBaseX::eTij



if(unit_test)
{
  SCHEDULE AsterX_Test AT wragh
  {
    LANG: C
    OPTIONS: meta
  } "Self-test"
}

if(local_estimate_error)
{  
  SCHEDULE AsterX_EstimateError_Setup AT wragh
  {
    LANG: C
    OPTIONS: GLOBAL
  } "set up for calculating regrid error"

  SCHEDULE AsterX_EstimateError IN ODESolvers_EstimateError
  {
    LANG: C
    READS: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::press(everywhere)
    WRITES: CarpetXRegrid::regrid_error(interior)
  } "Estimate local error for regridding initial conditions"
}



SCHEDULE GROUP AsterX_InitialGroup AT initial IN ODESolvers_Initial AFTER HydroBaseX_PostInitial 
{
} "Initialize conservative variables"

SCHEDULE AsterX_ComputedBstagFromA IN AsterX_InitialGroup
{
  LANG: C
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere)
  WRITES: dBx_stag(interior) dBy_stag(interior) dBz_stag(interior)
  SYNC: dBx_stag dBy_stag dBz_stag
} "Calculate dBstag from curl of A"

SCHEDULE AsterX_ComputedBFromdBstag IN AsterX_InitialGroup AFTER AsterX_ComputedBstagFromA
{
  LANG: C
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  WRITES: dB(interior)
  SYNC: dB
} "Calculate centered dB from dBstag"

SCHEDULE AsterX_ComputeBFromdB IN AsterX_InitialGroup AFTER AsterX_ComputedBFromdBstag
{
  LANG: C
  READS: dB(interior) ADMBaseX::metric(interior)
  WRITES: HydroBaseX::Bvec(interior)
  SYNC: HydroBaseX::Bvec
} "Calculate centered B from densitized B"

SCHEDULE AsterX_CheckPrims IN AsterX_InitialGroup AFTER AsterX_ComputeBFromdB
{
  LANG: C
  READS: ADMBaseX::metric(interior)
  READS: HydroBaseX::rho(interior) HydroBaseX::vel(interior) HydroBaseX::eps(interior) HydroBaseX::press(interior) HydroBaseX::temperature(interior) HydroBaseX::Bvec(interior)
  READS: HydroBaseX::entropy(interior) HydroBaseX::Ye(interior)
  WRITES: HydroBaseX::rho(interior) HydroBaseX::vel(interior) HydroBaseX::eps(interior) HydroBaseX::press(interior)
  WRITES: HydroBaseX::temperature(interior) HydroBaseX::entropy(interior) HydroBaseX::Ye(interior)
  WRITES: saved_prims(interior)
  WRITES: zvec(interior)
  WRITES: svec(interior)
  SYNC: HydroBaseX::rho HydroBaseX::vel HydroBaseX::eps HydroBaseX::press HydroBaseX::temperature HydroBaseX::entropy HydroBaseX::Ye
  SYNC: saved_prims
  SYNC: zvec
  SYNC: svec
} "Enforce limits on primitive variables"

SCHEDULE AsterX_Prim2Con_Initial IN AsterX_InitialGroup AFTER AsterX_CheckPrims
{
  LANG: C
  READS: ADMBaseX::metric(interior)
  READS: HydroBaseX::rho(interior) HydroBaseX::vel(interior) HydroBaseX::eps(interior) HydroBaseX::press(interior) HydroBaseX::Bvec(interior)
  READS: HydroBaseX::entropy(interior) HydroBaseX::Ye(interior)
  WRITES: dens(interior) tau(interior) DEnt(interior) mom(interior) DYe(interior) dB(interior)
  SYNC: dens tau DEnt mom dYe dB 
} "Compute conserved variables from primitive variables at initial"

if (zero_psi) {
  SCHEDULE AsterX_PsiZero_Initial IN AsterX_InitialGroup AFTER AsterX_Prim2Con_Initial
  {
    LANG: C
    WRITES: Psi(everywhere)
  } "Set Psi, time component of 4-vector potential, to zero initially"
}

SCHEDULE AsterX_Sync AT postregrid
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom DEnt DYe Avec_x Avec_y Avec_z Psi
  SYNC: saved_prims
  SYNC: ent_m1 ent_m2
} "Synchronize"

# SCHEDULE AsterX_SyncEFL AT postregrid
# {
#   LANG: C
#   OPTIONS: global
#   SYNC: ent_m1 ent_m2
# } "Synchronize"

SCHEDULE AsterX_Sync IN ODESolvers_PostStep
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom DEnt DYe Avec_x Avec_y Avec_z Psi
  SYNC: ent_m1 ent_m2
} "Synchronize"



SCHEDULE GROUP AsterX_Con2PrimGroup IN ODESolvers_PostStep BEFORE TmunuBaseX_SetTmunuVars AFTER AsterX_Sync
{
} "Compute primitive variables"

SCHEDULE AsterX_ComputedBstagFromA IN AsterX_Con2PrimGroup
{
  LANG: C
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere)
  WRITES: dBx_stag(interior) dBy_stag(interior) dBz_stag(interior)
  SYNC: dBx_stag dBy_stag dBz_stag
} "Calculate dBstag from curl of A"

SCHEDULE AsterX_ComputedBFromdBstag IN AsterX_Con2PrimGroup AFTER AsterX_ComputedBstagFromA
{
  LANG: C
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  WRITES: dB(interior)
  SYNC: dB
} "Calculate centered dB from dBstag"

SCHEDULE AsterX_Con2Prim IN AsterX_Con2PrimGroup AFTER AsterX_ComputedBFromdBstag
{
  LANG: C
  READS: AsterMasks::aster_mask_vc(interior)
  READS: ADMBaseX::metric(interior)
  READS: ADMBaseX::lapse(everywhere)
  READS: dens(interior) tau(interior) DEnt(interior) mom(interior) DYe(interior) dB(interior)
  READS: saved_prims(interior)
###  READS: HydroBaseX::press(interior) HydroBaseX::temperature(interior) HydroBaseX::entropy(interior)
  READS: Avec_x(interior) Avec_y(interior) Avec_z(interior)
  WRITES: con2prim_flag(interior) 
  WRITES: AsterMasks::aster_mask_cc(interior) 
  WRITES: HydroBaseX::rho(interior) HydroBaseX::vel(interior) HydroBaseX::eps(interior) HydroBaseX::press(interior) HydroBaseX::Bvec(interior) 
  WRITES: HydroBaseX::temperature(interior) HydroBaseX::entropy(interior) HydroBaseX::Ye(interior)
  WRITES: saved_prims(interior)
  WRITES: zvec(interior)
  WRITES: svec(interior)
  WRITES: dens(interior) tau(interior) DEnt(interior) mom(interior) DYe(interior) dB(interior)
  WRITES: volform(interior) w_lorentz(interior)
  SYNC: con2prim_flag  
  SYNC: AsterMasks::aster_mask_cc
  SYNC: HydroBaseX::rho HydroBaseX::vel HydroBaseX::eps HydroBaseX::press HydroBaseX::Bvec 
  SYNC: HydroBaseX::temperature HydroBaseX::entropy HydroBaseX::Ye
  SYNC: saved_prims
  SYNC: zvec
  SYNC: svec
  SYNC: dens tau DEnt mom dYe dB
  SYNC: volform w_lorentz
} "Calculate primitive variables from conservative variables"

SCHEDULE GROUP AsterX_RHSGroup IN ODESolvers_RHS
{
} "Calculate AsterX RHS"

STORAGE: fluxLO_x fluxLO_y fluxLO_z thetas
STORAGE: r_ent phys_ent ent_m1 ent_m2

SCHEDULE AsterX_InitEntropyTLs IN AsterX_InitialGroup AFTER AsterX_CheckPrims
{
  LANG: C
  READS: HydroBaseX::entropy(everywhere)
  WRITES: r_ent(everywhere) phys_ent(everywhere) ent_m1(everywhere) ent_m2(everywhere)
} "Initialize previos entropy timelevels for EFL"

SCHEDULE AsterX_CalcPhysEntropy IN AsterX_RHSGroup BEFORE AsterX_CalcEntropyResidual
{
  LANG: C
  READS: HydroBaseX::entropy(everywhere)
  WRITES: phys_ent(everywhere)
} "Calcuate physical from evolved entropy"

SCHEDULE AsterX_CalcPhysEntropy IN AsterX_Con2PrimGroup AFTER AsterX_Con2Prim
{
  LANG: C
  READS: HydroBaseX::entropy(everywhere)
  WRITES: phys_ent(everywhere)
} "Calcuate physical from evolved entropy"

SCHEDULE AsterX_CalcEntropyResidual IN AsterX_RHSGroup BEFORE AsterX_Fluxes
{
  LANG: C
  READS: ADMBaseX::lapse(everywhere)
  READS: ADMBaseX::shift(everywhere)
  READS: HydroBaseX::vel(everywhere)
  READS: phys_ent(everywhere) ent_m1(everywhere) ent_m2(everywhere)
  WRITES: r_ent(interior) ent_m1(interior) ent_m2(interior)
  SYNC: r_ent phys_ent ent_m1 ent_m2
} "Calculate local entropy gain for EFL"

# if(use_pplim || use_efl)
# {
# 	STORAGE: fluxLO_x fluxLO_y fluxLO_z thetas
# }

# if(use_efl)
# {
# 	STORAGE: r_ent phys_ent ent_m1 ent_m2
# 	
#   SCHEDULE AsterX_InitEntropyTLs IN AsterX_InitialGroup AFTER AsterX_CheckPrims
#   {
#     LANG: C
#     READS: HydroBaseX::entropy(everywhere)
#     WRITES: r_ent(everywhere) phys_ent(everywhere) ent_m1(everywhere) ent_m2(everywhere)
#   } "Initialize previos entropy timelevels for EFL"
# 
#   SCHEDULE AsterX_CalcPhysEntropy IN AsterX_RHSGroup BEFORE AsterX_CalcEntropyResidual
#   {
#     LANG: C
#     READS: HydroBaseX::entropy(everywhere)
#     WRITES: phys_ent(everywhere)
#   } "Calcuate physical from evolved entropy"
# 
#   SCHEDULE AsterX_CalcEntropyResidual IN AsterX_RHSGroup BEFORE AsterX_Fluxes
#   {
#     LANG: C
#     READS: ADMBaseX::lapse(everywhere)
#     READS: ADMBaseX::shift(everywhere)
#     READS: HydroBaseX::vel(everywhere)
#     READS: phys_ent(everywhere) ent_m1(everywhere) ent_m2(everywhere)
#     WRITES: r_ent(interior) ent_m1(interior) ent_m2(interior)
#     SYNC: r_ent phys_ent ent_m1 ent_m2
#   } "Calculate local entropy gain for EFL"
# }

SCHEDULE AsterX_Fluxes IN AsterX_RHSGroup
{
  LANG: C
  READS: ADMBaseX::metric(everywhere)
  READS: ADMBaseX::lapse(everywhere)
  READS: ADMBaseX::shift(everywhere)
  READS: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::press(everywhere) HydroBaseX::eps(everywhere)
  READS: HydroBaseX::temperature(everywhere) HydroBaseX::Ye(everywhere)
  READS: HydroBaseX::Bvec(everywhere)
  READS: HydroBaseX::entropy(everywhere)
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  READS: zvec_x(everywhere) zvec_y(everywhere) zvec_z(everywhere)
  READS: svec_x(everywhere) svec_y(everywhere) svec_z(everywhere)
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere) Psi(everywhere)
  READS: dens(everywhere) volform(everywhere) w_lorentz(everywhere)
  READS: r_ent(interior)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  WRITES: fluxLO_x(interior) fluxLO_y(interior) fluxLO_z(interior)
  WRITES: thetas(interior)
  WRITES: Aux_in_RHSof_A_Psi(interior)
  WRITES: vtilde_xface(interior) vtilde_yface(interior) vtilde_zface(interior)
  WRITES: a_xface(interior) a_yface(interior) a_zface(interior)
  SYNC: Aux_in_RHSof_A_Psi
  SYNC: flux_x flux_y flux_z
  SYNC: vtilde_xface vtilde_yface vtilde_zface a_xface a_yface a_zface
} "Calculate the hydro fluxes"

#SCHEDULE AsterX_Flux_Corrections IN AsterX_RHSGroup AFTER AsterX_Fluxes
#{
#  LANG: C
#  READS: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
#  # WRITES: fluxHO_x(interior) fluxHO_y(interior) fluxHO_z(interior)
#  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
#  SYNC: flux_x flux_y flux_z
#} "Computes the higher order corrections to fluxes and updates them"

SCHEDULE AsterX_SourceTerms IN AsterX_RHSGroup AFTER AsterX_Fluxes_Corrections
{
  LANG: C
  READS: ADMBaseX::metric(everywhere)
  READS: ADMBaseX::lapse(everywhere)
  READS: ADMBaseX::shift(everywhere)
  READS: ADMBaseX::curv(everywhere)
  READS: HydroBaseX::rho(everywhere) HydroBaseX::press(everywhere) HydroBaseX::eps(everywhere)
  READS: HydroBaseX::vel(everywhere)
  READS: zvec_x(everywhere), zvec_y(everywhere), zvec_z(everywhere)
  READS: svec_x(everywhere), svec_y(everywhere), svec_z(everywhere)
  READS: HydroBaseX::Bvec(everywhere)
  WRITES: densrhs(interior) taurhs(interior) momrhs(interior) DEntrhs(interior) DYe_rhs(interior)
  SYNC: densrhs taurhs momrhs DEntrhs DYe_rhs
} "Calculate the source terms and compute the RHS of the hydro equations"

SCHEDULE AsterX_RHS IN AsterX_RHSGroup AFTER AsterX_SourceTerms
{
  LANG: C
  READS: ADMBaseX::metric(everywhere) ADMBaseX::lapse(everywhere) ADMBaseX::shift(everywhere)
  READS: HydroBaseX::vel(everywhere) HydroBaseX::press(everywhere)
  READS: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
  READS: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere) DEntrhs(everywhere) DYe_rhs(everywhere)
  READS: Psi(everywhere)
  READS: Aux_in_RHSof_A_Psi(everywhere)
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  READS: vtilde_xface(everywhere) vtilde_yface(everywhere) vtilde_zface(everywhere)
  READS: a_xface(everywhere) a_yface(everywhere) a_zface(everywhere)
  WRITES: densrhs(interior) taurhs(interior) momrhs(interior) DEntrhs(interior) DYe_rhs(interior)
  WRITES: Avec_x_rhs(interior) Avec_y_rhs(interior) Avec_z_rhs(interior) Psi_rhs(interior)
  SYNC: densrhs taurhs momrhs DEntrhs DYe_rhs
  SYNC: Avec_x_rhs Avec_y_rhs Avec_z_rhs Psi_rhs
} "Update the RHS of the hydro equations with the flux contributions"



if(interpolate_failed_c2p)
{
  SCHEDULE AsterX_Con2Prim_Interpolate_Failed IN AsterX_RHSGroup BEFORE AsterX_Fluxes
  {
    LANG: C
    READS: ADMBaseX::metric(interior)
    READS: con2prim_flag(interior)
    READS: HydroBaseX::rho(interior) HydroBaseX::vel(interior) HydroBaseX::eps(interior) HydroBaseX::press(interior) HydroBaseX::Bvec(interior)
    READS: saved_prims(interior)
    READS: dens(interior) tau(interior) mom(interior)
    WRITES: con2prim_flag(interior)
    WRITES: HydroBaseX::rho(interior) HydroBaseX::vel(interior) HydroBaseX::eps(interior) HydroBaseX::press(interior)
    WRITES: saved_prims(interior)
    WRITES: dens(interior) tau(interior) mom(interior)
    SYNC: con2prim_flag
    SYNC: HydroBaseX::rho HydroBaseX::vel HydroBaseX::eps HydroBaseX::press
    SYNC: saved_prims
    SYNC: dens tau mom
  } "Interpolate those grid points where con2prim failed"
}
  
if(update_tmunu){
  SCHEDULE AsterX_Tmunu IN TmunuBaseX_AddToTmunu
  {
    LANG: C
    READS: ADMBaseX::metric(everywhere) ADMBaseX::lapse(everywhere) ADMBaseX::shift(everywhere)
    READS: HydroBaseX::rho(everywhere) HydroBaseX::press(everywhere) HydroBaseX::eps(everywhere)
    READS: HydroBaseX::vel(everywhere)
    READS: zvec_x(everywhere), zvec_y(everywhere), zvec_z(everywhere)
    READS: svec_x(everywhere), svec_y(everywhere), svec_z(everywhere)
    READS: HydroBaseX::Bvec(everywhere)
    READS: TmunuBaseX::eTtt(interior) TmunuBaseX::eTti(interior) TmunuBaseX::eTij(interior)
    WRITES: TmunuBaseX::eTtt(interior) TmunuBaseX::eTti(interior) TmunuBaseX::eTij(interior)
    SYNC: TmunuBaseX::eTtt TmunuBaseX::eTti TmunuBaseX::eTij
  } "Compute the energy-momentum tensor"
}
